<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "stax.dtd">

<!--
    1. reset log
    2. starte MCastor2.0 mit 1 L3 Sender
    3. ueberpruefe Log auf "Errors" oder "Warnings" und ob erwartete Werte richtig sind
-->
<stax>
    <function name="L84_1">
        <testcase name="'L84_1 | 1 Sender'" mode="'strict'">
            <parallel>


                <!-- MCastor2.0 Start -->
                <sequence>
                    <call function="'sleep'">'100'</call>
                    <call function="'startMCastor'">'Configs/test_1-1s_0-0r.xml','6s'</call>
                </sequence>
                
                <!-- Log File Auswertungen -->
                <sequence>
                    <call function="'reset'"/>
                    <call function="'sleep'">'5000'</call>

                    <message>'L84_1 | analyse MCastor2.0 STDOUT File (Log-File)'</message>
                    <script>
                        import re
                        mc_warning = re.compile("\[WARNING\]")
                        mc_finest = re.compile("\[FINEST\]")
                        mc_error = re.compile("\[ERROR\]")

                        f = open('tmp/mcastor.out', 'r')
                        error,warning,finest = 0,0,0;
                        wrong = ''
                        tollerance = ''
                        for l in f:
                            if mc_warning.match(l):
                                warning += 1
                            if mc_error.match(l):
                                error += 1
                            if mc_finest.match(l):
                                finest+=1
                                row = l.split('\t')
                                if row[3] != '1': 
                                    wrong += 'packet rate ('+row[3]+'!=1), '
                                    
                                if row[5] != '1': 
                                    wrong += 'ttl ('+row[5]+'!=1), '
                                    
                                if int(row[6]) != 6: 
                                    if int(row[6]) == 5:
                                        tollerance += 'sent packets ('+row[6]+'!=6), '
                                    elif int(row[6]) == 7:
                                        tollerance += 'sent packets ('+row[6]+'!=6), '
                                    else:
                                        tollerance += 'sent packets ('+row[6]+'!=6), '
                                    
                                if row[7] != 'L3_SENDER':
                                    wrong += 'typ ('+row[7]+'!=L3_SENDER), '
                        f.close()
                    </script>
                    <if expr="warning==0 and error==0 and len(wrong)==0 and finest>0">
                        <tcstatus result="'pass'" />
                        <else>
                            <tcstatus result="'fail'" />
                        </else>
                    </if>
                    <message>'L84_1 | %s erwartete Meldungen, %s kritische Fehler und %s Warnungen gefunden' % (finest,error,warning)</message>
                    <if expr="len(wrong)>0">
                        <message>'L84_1 | wrong values: %s' % (wrong)</message>
                    </if>
                    <if expr="len(tollerance)>0">
                        <message>'L84_1 | wrong values but in tollerance: %s' % (tollerance)</message>
                    </if>
                </sequence>

            </parallel>
        </testcase>
    </function>

</stax>

